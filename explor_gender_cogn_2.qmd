---
title: "Exploratory analysis: gender and cognitive competence"
format:
  html:
    code-fold: true
    code-summary: "Show the code"
    toc: true
warning: false
editor: visual
embed-resources: true
---

### Attatching packages

```{r}
#| message: false
library(readr)
library(tidyverse)
library(broom)
library(corrplot)
library(MASS)
library(nlme)
library(lme4)
library(ggeffects)
library(RColorBrewer)
library(effects)
load(url("http://www.rossmanchance.com/iscam3/ISCAM.RData"))

select <- dplyr::select
```

### Loading in data

```{r}
#| message: false
allYrsFinal <- read_csv("FinalData/All Years Final Public - with Vars.csv")
allYrsFinal_NA <- allYrsFinal |>
  filter(cognitive.competence.pre != 0,
         cognitive.competence.post != 0)|>
  mutate(gender = case_when(is.na(gender) ~ "NA/Other",
                            TRUE~gender))

 allYrsFinal <- allYrsFinal |>
  filter(cognitive.competence.pre != 0,
         cognitive.competence.post != 0)
```

## How Many NAs?

```{r}
allYrsFinal |>
  group_by(gender)|>
  count()
```

# Correlation matrices by gender

For pre questions, for women

```{r}
competenceFull <- c("q6e.pre.a", "q6e.post.a", "q7a.pre.a", "q7a.post.a", "q8f.pre.a", "q8f.post.a", "q9a.pre.a", "q9a.post.a", "q9b.pre.a", "q9b.post.a", "q9e.pre.a", "q9e.post.a")

pre_only_F <- allYrsFinal|>
  filter(gender == "Female")|>
  select(all_of(competenceFull))|>
  select(ends_with("pre.a")) |>
  drop_na()
cor(pre_only_F)
corrplot(cor(pre_only_F))
```

For pre questions, for men

```{r}
pre_only_M <- allYrsFinal|>
  filter(gender == "Male")|>
  select(all_of(competenceFull))|>
  select(ends_with("pre.a")) |>
  drop_na()
cor(pre_only_M)
corrplot(cor(pre_only_M))
```

For pre questions, for NAs

```{r}
pre_only_NA <- allYrsFinal|>
  filter(is.na(gender))|>
  select(all_of(competenceFull))|>
  select(ends_with("pre.a")) |>
  drop_na()
cor(pre_only_NA)
corrplot(cor(pre_only_NA))
```

For post questions, for women

```{r}
post_only_F <- allYrsFinal|>
  filter(gender == "Female")|>
  select(all_of(competenceFull))|>
  select(ends_with("post.a")) |>
  drop_na()
cor(post_only_F)
corrplot(cor(post_only_F))
```

For post questions, for men

```{r}
post_only_M <- allYrsFinal|>
  filter(gender == "Male")|>
  select(all_of(competenceFull))|>
  select(ends_with("post.a")) |>
  drop_na()
cor(post_only_M)
corrplot(cor(post_only_M))
```

For post questions, for NAs

```{r}
post_only_M <- allYrsFinal|>
  filter(gender == "Male")|>
  select(all_of(competenceFull))|>
  select(ends_with("post.a")) |>
  drop_na()
cor(post_only_M)
corrplot(cor(post_only_M))
```

# Calc Prerequisites

```{r}
calc_req_NA <- allYrsFinal|>
  filter(math.prereq == "Calculus", 
         cognitive.competence.pre != 0,
         cognitive.competence.post != 0)|>
  mutate(gender = case_when(is.na(gender) ~ "NA/Other",
                            TRUE~gender),   mastering.confidence.change = mastering.confidence.post - mastering.confidence.pre)


calc_req <- allYrsFinal|>
  filter(math.prereq == "Calculus", 
         !is.na(gender),
         cognitive.competence.pre != 0,
         cognitive.competence.post != 0)|>
  mutate(mastering.confidence.change = mastering.confidence.post - mastering.confidence.pre)


calc.fit <- lme(cognitive.competence.change ~ gender+ instructor.gender +  years.teaching.intro.stats.binned, 
                random = ~ 1+gender|instructor, data= calc_req)

plot(resid(calc.fit) ~ fitted(calc.fit), xlab = "Fitted", ylab="Residuals")
abline(h=0, lty = "dashed")
#normal Q-Q plot of residuals 
qqnorm(resid(calc.fit), ylab="Residuals"); qqline(resid(calc.fit), lty = "dashed")
#histogram of residuals
hist(resid(calc.fit), main = '', col="olivedrab", xlab = "Residuals")
  
```

```{r}
summary(calc.fit) 

ranef(calc.fit) # coeffs for each instructor section
```

### model without instructor gender

With instructor gender: \* \* residual StdDev = 0.8244677\
\* genderMale StdDev = 0.1897776

Without instructor gender:

-   residual StdDev = 0.8242596\
-   genderMale StdDev = 0.1846574

With gender*instructor gender:* residual StdDev = 0.8226201\
\* genderMale StdDev = 0.2226835

With/without models seem to explain a similar amount of variability gender\*instructor gender explains a bit more variability

```{r}
calc.fit2 <- lme(cognitive.competence.change ~ gender +  years.teaching.intro.stats.binned, 
                random = ~ 1+gender|instructor, data= calc_req_NA)

plot(resid(calc.fit2) ~ fitted(calc.fit2), xlab = "Fitted", ylab="Residuals")
abline(h=0, lty = "dashed")
#normal Q-Q plot of residuals 
qqnorm(resid(calc.fit2), ylab="Residuals"); qqline(resid(calc.fit), lty = "dashed")
#histogram of residuals
hist(resid(calc.fit2), main = '', col="olivedrab", xlab = "Residuals")

summary(calc.fit2)
```

Turning some vars into factors for ggpredict

```{r}
calc_factor <- calc_req|>
  mutate(gender = factor(gender),
         instructor.gender= factor(instructor.gender),
         years.teaching.intro.stats.binned = factor( years.teaching.intro.stats.binned),
         instructor = factor(instructor),
         textbook.classification = factor(textbook.classification))
```


Random Slopes Graph with Only Gender and Instructor

The lines look pretty parallel = the effect of gender on cognitive competence change is consistent across instructors

```{r}

calc.fit <- lme(cognitive.competence.change ~ gender, 
                random = ~ 1+gender|instructor, data= calc_factor)

calc_plot <- ggpredict(calc.fit, 
          terms = c("gender", "instructor [sample=8]"),
          type = "re")

ggplot(calc_plot, aes(x=x, y=predicted, group = group, color = group))+
  geom_line() +
  labs(y= "Cognitive Competence Change", x="Female = 0, Male = 1", color = "Instructor")
```


### Checking of NAs and 0s in cognitive competence

```{r, echo=FALSE}
table(calc_req$years.teaching.intro.stats.binned)
```

```{r, echo=FALSE}
unique(calc_req$instructor.section)
# not enough instructors to put in many variables pertaining to instructor
```

```{r}
competencePre <- c("q6e.pre.a",  "q7a.pre.a", "q8f.pre.a", "q9a.pre.a", "q9b.pre.a",  "q9e.pre.a")
competencePost <- c("q6e.post.a",  "q7a.post.a", "q8f.post.a", "q9a.post.a", "q9b.post.a",  "q9e.post.a")

calc_req|> # checking for NAs and 0s
  select(all_of(competencePre), cognitive.competence.pre)
```

```{r}
table(is.na(calc_req$q7a.pre.a))
table(calc_req$cognitive.competence.pre == 0) # get rid of (then check for post - make sure that they only get a 0 on cognitive.competence.pre/post if they didn't fill out any)

calc_req|>
  filter(is.na(q7a.pre.a), cognitive.competence.pre != 0)|>
  select(all_of(competencePre), cognitive.competence.pre)
```

```{r}
calc_req|>
  filter(cognitive.competence.pre == 0) # none

calc_req|>
  filter(cognitive.competence.post == 0) # none
```

```{r}
table(is.na(calc_req$q7a.post.a))
table(calc_req$cognitive.competence.post == 0) # get rid of (then check for post - make sure that they only get a 0 on cognitive.competence.pre/post if they didn't fill out any)

# we can remove cognitive.competencepre/post from dataset

calc_req|>
  filter(is.na(q7a.post.a), cognitive.competence.post != 0)|> 
  select(all_of(competencePost), cognitive.competence.post)
```

```{r}
length(unique(calc_req$instructor.section))
```

```{r}
boxplot(resid(calc.fit) ~ calc_req$carnegie.classification, xlab = "instructor section", ylab="Residuals")

length(resid(calc.fit))
length(calc_req$instructor.section)
nrow(calc_req)

iscamsummary(resid(calc.fit))
iscamsummary(calc_req$cognitive.competence.change)
table(calc_req$gender)
table(calc_req$instructor.gender)
table(calc_req$years.teaching.experience.binned)
View(calc_req$years.teaching.experience.binned)
```

```{r}
calc_req|>
  ggplot(aes(x=cognitive.competence.pre, y = cognitive.competence.post)) +
  geom_point()

calc_req|>
  filter(cognitive.competence.pre == 0)
```

```{r}
calc_req|>
  filter(is.na(years.teaching.experience.binned), 
         instructor == "Instructor204")|>
  select(institution, textbook.used, textbook.classification, carnegie.classification, instructor.section, years.teaching.intro.stats)
```

### Regular regression with a gender\*instructor term

Instructors that look worse for women and better for men:

-   Instructor 99
-   Instructor 182
-   Instructor 234
-   Instructor 77

Instructors that look worse for men and better for women \* Instructor 40 (Female) \* Instructor 204 (Female) \* Instructor 95

Instructor177 had a baseline cognitive competence change of -0.44 
204, 243, and 40 were significant (204 was borderline significant) 
genderMale:Instructor204 was borderline significant

```{r}
library(gridExtra)
# reference instructor: 177
calc_fit_reg <- lm(cognitive.competence.change ~ gender*instructor + years.teaching.intro.stats.binned, data= calc_req)

summary(calc_fit_reg)

color_instr <- rainbow(length(unique(calc_req$instructor)))
color_instr_gender <- rainbow(length(unique(calc_req$instructor.gender)))

reg_interaction <- interaction.plot(x.factor = calc_req$gender, trace.factor = calc_req$instructor, response = calc_req$cognitive.competence.change,
                 xlab="Gender",
                 ylab="Cognitive Competence Change",
                 trace.label="Instructor",
                 col = color_instr)

interaction.plot(x.factor = calc_req$gender, trace.factor = calc_req$instructor.gender, response = calc_req$cognitive.competence.change,
                 xlab="Gender",
                 ylab="Cognitive Competence Change",
                 trace.label="Instructor Gender", col=color_instr_gender)


calc_req|>
  select(instructor, instructor.gender)|>
  distinct()

# textbook classification made a difference
calc.fit5 <- lmer(cognitive.competence.change ~ gender +  (1+gender|instructor), data= calc_req, na.action=na.omit)

summary(calc.fit5)
ranef(calc.fit5)

lmer_interaction <- plot(ggpredict(calc.fit5, terms = c("gender", "instructor [sample=8]"), type = "re"), show_ci=F)
lmer_interaction 

plot(effect("gender", calc.fit5, data=calc.req))

#plot(allEffects(c("gender", "instructor"), calc.fit5, data=calc.req))

grid.arrange(reg_interaction, lmer_interaction, ncol=2)
```

Significant instructors (significantly diff from 177)

```{r}
calc_req|>
  filter(instructor=="Instructor204" |
         instructor == "Instructor234" |
         instructor == "Instructor40")|>
  group_by(instructor, instructor.gender)|>
  summarize(mean_cog_comp_change = mean(cognitive.competence.change, na.rm = TRUE), 
            mean_ach_gain = mean(ach.gain.24, na.rm = TRUE), instructor.gender, 
            .groups='drop')|>
  distinct()
```

# Fitting other models to find something interesting

```{r}
calc_req|>
  ggplot(aes(x=mastering.confidence.pre, y = mastering.confidence.post)) +
  geom_point()

plot(mastering.confidence.pre ~ mastering.confidence.post, data= calc_req)

calc_req|>
  filter(is.na(mastering.confidence.change))

calc_req|>
  filter(mastering.confidence.pre ==0 | mastering.confidence.post == 0)
```

lme notes: fixed effects: coeffocoemts that are constant across individuals or entities random effects: vary among individuals or entities

### Model with mastering.confidence.change

How cog comp change is influenced by gender, years teaching intro stats, and mastering confidence change. Random effects structure allows the intercept and slope for gender to vary by instructor.

Random effects

\* Intercept for instructor: StdDev very close to zero -\> very little variability in the intercept across different instructors

-   genderMale: StdDev = 0.166 -\> some variability in the effect of being male across different instructors

-   Residual: StdDev = 0.708 -\> within group variation (how to better interpret?)

Fixed Effects \* Intercept: Intercept is not significantly different from 0

-   genderMale: gender does not have a signifcant effect on cog comp change

-   years.teaching.intro.stats does not have a significant effect on cog comp change

-   mastering.confidence.change: coeff = 0.3547 and significantly affects cog comp change

```{r}
calc.fit3 <- lme(cognitive.competence.change ~ gender +  years.teaching.intro.stats.binned + mastering.confidence.change, 
                random = ~ 1+gender|instructor, data= calc_req, na.action=na.omit)
plot(resid(calc.fit3) ~ fitted(calc.fit3), xlab = "Fitted", ylab="Residuals")
abline(h=0, lty = "dashed")
#normal Q-Q plot of residuals 
qqnorm(resid(calc.fit3), ylab="Residuals"); qqline(resid(calc.fit3), lty = "dashed")
#histogram of residuals
hist(resid(calc.fit3), main = '', col="olivedrab", xlab = "Residuals")

summary(calc.fit3)

```

```{r}
calc.fit3 <- lmer(cognitive.competence.change ~ gender +  years.teaching.intro.stats.binned + mastering.confidence.change + (1+gender|instructor), data= calc_req, na.action=na.omit)

summary(calc.fit3)

plot(ggpredict(calc.fit3, terms = c("gender", "instructor [sample=8]"), type = "re"), show_ci=F)

plot(effect(term="gender", calc.fit3 , data=calc.req))

```



genderMale\*mastering.confidence.change not significant
But what is going on in the plot??

```{r}
calc.fit3_interaction <- lmer(cognitive.competence.change ~ gender*mastering.confidence.change +  years.teaching.intro.stats.binned +
                (1+gender|instructor), data= calc_req, na.action=na.omit)

summary(calc.fit3_interaction)

plot(ggpredict(calc.fit3_interaction, terms = c("gender", "instructor [sample=8]"), type = "re"), show_ci=F)

plot(effect(term="gender", calc.fit3_interaction , data=calc.req))
```


There's variability in the baseline cognitive competence change among different instructors.
The effect of gender on cognitive competence change varies across instructors, although the fixed effect of gender is not statistically significant.
The variability in teaching experience (years of teaching) does not seem to have a significant effect on cognitive competence change.
```{r}
 calc.fit3_RandGender <- lmer(cognitive.competence.change ~ gender +  years.teaching.intro.stats.binned  + ( 1 + gender|instructor), data= calc_req, na.action=na.omit)

summary(calc.fit3_RandGender)

plot(ggpredict(calc.fit3_noRandGender, terms = c("gender", "instructor [sample=8]"), type = "re"), show_ci= F)

plot(effect(term="gender", mod = calc.fit3_RandGender, data=calc_req))

```



Loop through other attitudes \* all look significant \* no significant interactions \* Affect and Interest have the "most" significant interactions

```{r}
other_attitudes_change <- c("affect.change", "difficulty.change", "effort.change", "interest.change", "value.change")

summaries <- list()
  
for (change in other_attitudes_change){
  formula <- as.formula(paste("cognitive.competence.change ~ gender * ", change))
  
  calc.fit.loop <- lme(formula, random = ~ 1| instructor, data = calc_req, na.action = na.omit)
  summaries[[change]] <- summary(calc.fit.loop)
  
}
  
for (change in other_attitudes_change) {
  print(summaries[[change]])
}
```

### Model with textbook classification

Random effects:

-   Intercept: StdDev = 0.2181 -\> some variability in cog comp change can be attributed to differences between instructors

-   Residuals: StdDev = 0.8274 -\> variation in cog comp change within instructors not explained by fixed effects

Fixed effects:

-   Intercept: baseline level of cog comp change for reference group (females with instructors with less than 5 years of teaching) -\> not significant

-   genderMale: coeff = -0.1882, p = 0.0305 -\> being male has a significant negative effect on cog comp change

-   years teaching intro stats (10-20) does not have a significant effect on cog comp change compared with those with 0-5 years experience

-   years teaching intro stats (5-10) has a positive signifcant increase on cog comp change than those with 0-5 years experience

-   NotSBI, NotSBI2, and Other aren't different from ISI but OtherSBI is ???

There are gender differences for genders using the same textbook

```{r}
calc.fit5 <- lmer(cognitive.competence.change ~ gender + textbook.classification + (1+gender|instructor), data= calc_req, na.action=na.omit)

calc.fit5_noRandGender <- lmer(cognitive.competence.change ~ gender + textbook.classification + (1|instructor), data= calc_req, na.action=na.omit)

anova(calc.fit5 , calc.fit5_noRandGender)

summary(calc.fit5)
ranef(calc.fit5)

plot(ggpredict(calc.fit5, terms = c("gender", "instructor [sample=8]"), type = "re"), show_ci=F)

plot(effect("gender", calc.fit5, data=calc.req))

plot(allEffects(c("gender", "instructor"), calc.fit5, data=calc.req))
```

Random slopes (textbook classification)

```{r}
calc.fit5_lme <- lme(cognitive.competence.change ~ gender + textbook.classification , 
                random = ~ 1 +gender |instructor, data= calc_req, na.action=na.omit)

summary(calc.fit5_lme)
```

Investigate "imbalance" of gender across textbooks: Proportions of males for each textbook classification

```{r}
unique(calc_req_NA$textbook.classification)

calc_req_NA|>
  group_by(textbook.classification)|>
  summarize(
    total = n(),
    num_males = sum(gender == "Male")
  ) |>
  mutate(prop_males = num_males/total)

```

With textbook.classification*gender, genderMale p = 0.1770 

No significant interaction terms 

There is some imbalance of gender across the textbooks, but not enough to be signifcant?

```{r}
calc.fit6<- lmer(cognitive.competence.change ~ gender +  textbook.classification + years.teaching.intro.stats.binned+ (1+gender|instructor), data= calc_req, na.action = na.omit)

summary(calc.fit6)

plot(ggpredict(calc.fit6, terms = c("gender", "instructor [sample=8]"), type = "re"), show_ci=F)

plot(effect(term="gender", calc.fit6, data=calc.req))

```

Textbook classification, years teaching intro stats, instructor gender
```{r}
calc.fit7<- lmer(cognitive.competence.change ~ gender +  textbook.classification + years.teaching.intro.stats.binned+ instructor.gender + (1+gender|instructor), data= calc_req, na.action = na.omit)

summary(calc.fit7)

plot(ggpredict(calc.fit7, terms = c("gender", "instructor [sample=8]"), type = "re"), show_ci=F)

plot(effect(term="gender", calc.fit7, data=calc.req))

```


Without years teaching intro stats
```{r}
calc.fit8<- lmer(cognitive.competence.change ~ gender +  textbook.classification + instructor.gender + (1+gender|instructor), data= calc_req, na.action = na.omit)

summary(calc.fit8)

plot(ggpredict(calc.fit8, terms = c("gender", "instructor [sample=8]"), type = "re"), show_ci=F)

plot(effect(term="gender", calc.fit8, data=calc.req))

```



```{r}
calc.fit9<- lmer(cognitive.competence.change ~ gender +  TA + years.teaching.intro.stats.binned + (1+gender|instructor), data= calc_req, na.action = na.omit)

summary(calc.fit9)

plot(ggpredict(calc.fit9, terms = c("gender", "instructor [sample=8]"), type = "re"), show_ci=F)

plot(effect(term="gender", calc.fit9, data=calc.req))

```




## Applying to whole dataset:
Turning some vars of allYrsFinal into factors
```{r}
allYrsFinal_factor <- allYrsFinal|>
  mutate(gender = factor(gender),
         instructor.gender= factor(instructor.gender),
         years.teaching.intro.stats.binned = factor( years.teaching.intro.stats.binned),
         instructor = factor(instructor))
```

### Gender, textbook classification, years teaching intro stats
```{r}
textbook.fit <- lme(cognitive.competence.change ~ gender + years.teaching.intro.stats.binned + textbook.classification, 
                random = ~ 1|instructor, data= allYrsFinal, na.action=na.omit)

summary(textbook.fit)



```
Interaction plot
Lines look pretty parallel
```{r}
textbook.fit_lmer <- lmer(cognitive.competence.change ~ gender + years.teaching.intro.stats.binned + textbook.classification +(1+gender|instructor), data= allYrsFinal, na.action=na.omit)

summary(textbook.fit_lmer)


plot(ggpredict(textbook.fit_lmer, terms = c("gender", "instructor [sample=8]"), type = "re"), show_ci=F)
```



Proportion of males for each textbook
```{r}
allYrsFinal|>
  group_by(textbook.classification)|>
  summarize(
    total = n(),
    num_males = sum(gender == "Male", na.rm = TRUE)
  ) |>
  mutate(prop_males = num_males/total)
```

Gender, 5-10 years, 10-20 years, NotSBI, OtherSBI genderMale:textbook.classificationNotSBI, genderMale:textbook.classificationOther significant

```{r}
textbook.fit_randGender <- lme(cognitive.competence.change ~ gender + years.teaching.intro.stats.binned +  textbook.classification, 
                random = ~ 1+gender|instructor, data= allYrsFinal, na.action=na.omit)

summary(textbook.fit_randGender)
```
```{r}
textbook.fit_randGender_fct <- lme(cognitive.competence.change ~ gender + years.teaching.intro.stats.binned +  textbook.classification, 
                random = ~ 1+gender|instructor, data= allYrsFinal_factor, na.action=na.omit)
textbook_plot2 <- ggpredict(textbook.fit_randGender_fct, 
          terms = c("gender", "textbook.classification", "instructor [sample=8]"),
          type = "re")

ggplot(textbook_plot2, aes(x=x, y=predicted, group = group, color = group))+
  geom_line() +
  labs(y= "Cognitive Competence Change", x="Female = 0, Male = 1", color = "Textbook")

```

Regular regression: gender*textbook.classification
```{r}
reg_text.fit <- lm(cognitive.competence.change~gender*textbook.classification + years.teaching.intro.stats.binned + instructor.gender, data = allYrsFinal)

summary(reg_text.fit)

num_classes <- length(unique(allYrsFinal$textbook.classification))
textbook_colors <- brewer.pal(min(num_classes, 6), "Dark2")

interaction.plot(x.factor=allYrsFinal$gender, trace.factor = allYrsFinal$textbook.classification, response = allYrsFinal$cognitive.competence.change,
                 xlab = "Gender",
                 ylab = "Cognitive Competence Change",
                 trace.label = "Textbook Classification",
                 col = textbook_colors)
```


### Predicting ach gain

Random effects

-   Intercept StdDev = 0.1802149 -\> some variability in ach.gain.24 between different instructors
-   Residual StdDev = 0.2890601

Fixed effects

-   genderMale has a positive significant effect on ach.gain.24 when compared to females
-   genderNA/Other does not have a significant effect on ach.gain.24 compared to females
-   years.teaching.intro.stats.binned10-20: does not have a significant effect on ach.gain.24 compared to 0-5 years
-   years.teaching.intro.stats.binned5-10 has a significant negative effect on ach.gain.24 compared to 0-5 years
-   cognitive.competence.change has a positive and significant effect on ach.gain.24

```{r}
calc.fit6 <- lme(ach.gain.24 ~ gender + years.teaching.intro.stats.binned + cognitive.competence.change, 
                random = ~ 1|instructor, data= calc_req_NA)

summary(calc.fit6)
```

Interaction between gender and pre?

```{r}
calc.fit7 <- lme(cognitive.competence.change ~ gender + ach.gain.24 + textbook.classification, 
                random = ~ 1+gender|instructor, data= calc_req, na.action=na.omit)

summary(calc.fit7)
```

### Trying K-means clustering?

```{r}
calc_req |>
  ggplot(aes(x= cognitive.competence.pre, y = cognitive.competence.change,  color=gender, shape = textbook.classification)) +
  geom_point(alpha=0.5)
```

```{r}
calc_cols <- calc_req |>
  select(textbook.classification, cognitive.competence.change, cognitive.competence.pre) |>
  filter(!is.na(textbook.classification), !is.na(cognitive.competence.change), !is.na(cognitive.competence.pre))

# one hot encoding
calc_cols <- calc_cols |>
  mutate(textbook.classification = factor(textbook.classification))|>
  pivot_wider(names_from = textbook.classification, values_from = textbook.classification, 
              values_fn = length, values_fill = list(textbook.classification = 0))

set.seed(123)
km.out <- kmeans(calc_cols, centers = 4, nstart = 20)
km.out
```

```{r}
# Decide how many clusters to look at
n_clusters <- 10

# Initialize total within sum of squares error: wss
wss <- numeric(n_clusters)

set.seed(123)

# Look over 1 to n possible clusters
for (i in 1:n_clusters) {
  # Fit the model: km.out
  km.out <- kmeans(calc_cols, centers = i, nstart = 20)
  # Save the within cluster sum of squares
  wss[i] <- km.out$tot.withinss
}

# Produce a scree plot
wss_df <- tibble(clusters = 1:n_clusters, wss = wss)
 
scree_plot <- ggplot(wss_df, aes(x = clusters, y = wss, group = 1)) +
    geom_point(size = 4)+
    geom_line() +
    scale_x_continuous(breaks = c(2, 4, 6, 8, 10)) +
    xlab('Number of clusters')
scree_plot
```

```{r}
km.out <- kmeans(calc_cols, centers = 5, nstart = 20)



calc_cols$cluster_id <- factor(km.out$cluster)
ggplot(calc_cols, aes(x= cognitive.competence.pre, y=cognitive.competence.change, color = cluster_id)) +
    geom_point(alpha = 0.5) 
```

Compare with only binary SBI

```{r}
unique(calc_req$textbook.classification)
calc_req <- calc_req|>
  mutate(textbookSBI = case_when(textbook.classification == "ISI"~ "SBI",
                                 textbook.classification == "OtherSBI" ~ "SBI",
                                 textbook.classification == "NotSBI" ~ "Not SBI",
                                 textbook.classification == "NotSBI2" ~ "Not SBI",
                                 textbook.classification == "Other" ~ "Other"))
calc_req |>
  ggplot(aes(x= cognitive.competence.pre, y = cognitive.competence.change,  color=gender, shape = textbookSBI)) +
  geom_point(alpha=0.5)

```

# Individual graphs

```{r}
calc_req |>
  ggplot(aes(x=gender, y = cognitive.competence.change)) + 
  geom_boxplot() + 
  geom_violin(alpha = 0.5, color = "olivedrab")

calc_req |>
  #drop_na(cognitive.competence.change) |>
  ggplot(aes(x=instructor.gender , y = cognitive.competence.change)) + 
  geom_boxplot() + 
  geom_violin(alpha = 0.5, color = "olivedrab")

calc_req |>
  ggplot(aes(x= years.teaching.experience, y = cognitive.competence.change)) + 
  geom_point() # not linear

calc_req |>
  ggplot(aes(x= years.teaching.experience.binned, y = cognitive.competence.change)) + 
  geom_boxplot() + 
  geom_violin(alpha = 0.5, color = "olivedrab")

calc_req|>
  group_by(institution) |>
  mutate(mean_change = mean(cognitive.competence.change)) |>
  ungroup()|>
  ggplot(aes(x= institution, y = mean_change)) + 
  geom_boxplot()

```




## Cog Comp Change boxplots

### Across calc pre-req classes

```{r}
calc_req|>
  ggplot(aes(x=gender, y=cognitive.competence.change)) + 
  geom_boxplot() + geom_violin(alpha = 0.5, color = "orchid")

count(calc_req) # 513

calc_req |> 
  filter(is.na(gender))|> # 2 gender NAs
  count()
```

### Across non-calc pre-req classes

```{r}
non_calc <- allYrsFinal|>
  filter(math.prereq != "Calculus") 

non_calc|>
  ggplot(aes(x=gender, y=cognitive.competence.change)) + 
  geom_boxplot() + geom_violin(alpha = 0.5, color = "orchid")

count(non_calc) # 13704	

non_calc|>
  filter(is.na(gender))|> # 115 gender NAs
  count()
```

### Across 4-year schools - are there any outstanding ones?

```{r}
# allYrsFinal|>
#   select(institution)

#unique(allYrsFinal$institution)

allYrsFinal |>
  filter(carnegie.classification == "Baccalaureate College") |>
  group_by(factor(institution))|>
  summarize(mean_cog_comp_change = mean(cognitive.competence.change))|>
  arrange(mean_cog_comp_change)


# worst: 40 : -3.2
# best: 28 : 0.875
```

# Find worst instructor at worst school for cog comp change (Instructor50)

```{r}
allYrsFinal|>
  filter(institution == 40)|>
  group_by(factor(instructor))|>
  summarize(mean_cog_comp_change = mean(cognitive.competence.change))|>
  arrange(mean_cog_comp_change)
  
```

# Find worst section (both were bad)

```{r}
allYrsFinal|>
  filter(instructor == "Instructor50")|>
  group_by(factor(section))|>
  summarize(mean_cog_comp_change = mean(cognitive.competence.change))|>
  arrange(mean_cog_comp_change)
  
```

```{r}
instr_50 <- allYrsFinal|>
  filter(instructor == "Instructor50")

instr_50["textbook.classification"] # NotSBI

instr_50 |>
  ggplot(aes(x=gender, y=cognitive.competence.change)) + 
  geom_boxplot() + geom_violin(alpha = 0.5, color = "orchid")

instr_50 |>
  dplyr::select(ach.gain.24) # all NAs ?

instr_50 |>
  group_by(gender)|> # 38:17 gender split
  count()

instr_50["instructor.gender"] # female instructor
```

# Best instructor at best school for cog comp change (only 1 instructor: Instructor33)

```{r}
allYrsFinal |>
  filter(institution == 28)|>
  group_by(factor(instructor))|>
  summarize(mean_cog_comp_change = mean(cognitive.competence.change))|>
  arrange(mean_cog_comp_change)
```

```{r}
allYrsFinal |>
  filter(instructor == "Instructor33")|>
  group_by(factor(section))|>
  summarize(mean_cog_comp_change = mean(cognitive.competence.change))|> # sections pretty similar
  arrange(mean_cog_comp_change)
```

```{r}
instr_33 <- allYrsFinal |>
  filter(instructor == "Instructor33")

instr_33["textbook.classification"] # NotSBI

instr_33 |>
  ggplot(aes(x=gender, y=cognitive.competence.change)) + 
  geom_boxplot() + geom_violin(alpha = 0.5, color = "orchid")

instr_33 |>
  drop_na(ach.gain.24)|>
  summarize(mean(ach.gain.24)) # 0.1689703	

instr_33 |>
  group_by(gender)|> # 39:21 gender split
  count()

instr_33["instructor.gender"] # female instructor
```

# Find top 10 sections in Year 3

```{r}
top10 <- allYrsFinal|>
  filter(year == "16-17") |>
  group_by(instructor.section)|>
  mutate(mean_cog_comp_change = mean(cognitive.competence.change))|>
  #arrange(mean_cog_comp_change)|>
  slice_max(order_by = mean_cog_comp_change, n =10)|>
  ungroup()

top10
```

Long format

```{r}
competenceFull <- c("q6e.pre.a", "q6e.post.a", "q7a.pre.a", "q7a.post.a", "q8f.pre.a", "q8f.post.a", "q9a.pre.a", "q9a.post.a", "q9b.pre.a", "q9b.post.a", "q9e.pre.a", "q9e.post.a")

questions_long_top10 <- top10 |>
  select(all_of(competenceFull), gender, ach.gain.24) |>
  pivot_longer(cols=all_of(competenceFull),
               names_to = "question",
               values_to = "score")

questions_long_top10 <- questions_long_top10 |>
  mutate(row_id = row_number(),
         preOrPost = case_when(str_detect(question, "pre") ~ "pre",
                               str_detect(question, "post") ~ "post"),
         question_num = str_extract(question, "q\\d+[a-z]"))


questions_wide_top10 <- questions_long_top10 |>
  pivot_wider(names_from = preOrPost, values_from = score, id_cols = c(row_id, gender, question_num)) |>
  select(-row_id) |>
  group_by(gender, question_num) |>
  fill(pre, post, .direction = "downup") |>
  ungroup()

questions_change_top10 <- questions_wide_top10 |>
  mutate(change = post - pre) 
```

Change Per Question by Gender Boxplots (top 10)

```{r}


questions_change_top10|>
  ggplot(aes(x=question_num, y=change, color = gender)) + 
  geom_boxplot() +
  labs(title="Top 10 sections: Change Per Question by Gender Boxplots")
```

Change Per Question by Gender Line Graph

```{r}
questions_change_top10|>
  mutate(question_num = factor(question_num, levels = unique(question_num))) |>
  group_by(gender, question_num) |>
  summarize(mean_change = mean(change)) |>
  ungroup() |>
  ggplot(aes(x=question_num, y=mean_change, color = gender, group = gender)) +
    geom_line() 
```

# Find lowest 10 sections

```{r}
low10 <- allYrsFinal|>
  filter(year == "16-17") |>
  group_by(instructor.section)|>
  mutate(mean_cog_comp_change = mean(cognitive.competence.change))|>
  #arrange(mean_cog_comp_change)|>
  slice_min(order_by = mean_cog_comp_change, n =10)|>
  ungroup()

low10
```

Long format

```{r}
questions_long_low10 <- low10 |>
  select(all_of(competenceFull), gender, ach.gain.24) |>
  pivot_longer(cols=all_of(competenceFull),
               names_to = "question",
               values_to = "score")

questions_long_low10 <- questions_long_low10 |>
  mutate(row_id = row_number(),
         preOrPost = case_when(str_detect(question, "pre") ~ "pre",
                               str_detect(question, "post") ~ "post"),
         question_num = str_extract(question, "q\\d+[a-z]"))


questions_wide_low10 <- questions_long_low10 |>
  pivot_wider(names_from = preOrPost, values_from = score, id_cols = c(row_id, gender, question_num)) |>
  select(-row_id) |>
  group_by(gender, question_num) |>
  fill(pre, post, .direction = "downup") |>
  ungroup()

questions_change_low10 <- questions_wide_low10 |>
  mutate(change = post - pre) 
```

Change Per Question by Gender Boxplots (lowest 10)

```{r}
questions_change_top10|>
  ggplot(aes(x=question_num, y=change, color = gender)) + 
  geom_boxplot() +
  labs(title="Lowest 10 sections: Change Per Question by Gender Boxplots")
```

Change Per Question by Gender Line Graph (lowest 10)

```{r}
questions_change_top10|>
  mutate(question_num = factor(question_num, levels = unique(question_num))) |>
  group_by(gender, question_num) |>
  summarize(mean_change = mean(change)) |>
  ungroup() |>
  ggplot(aes(x=question_num, y=mean_change, color = gender, group = gender)) +
    geom_line() 
```

## ISCAM instructors

```{r}
allYrsFinal|>
  filter(textbook.classification == "ISCAM")
```
